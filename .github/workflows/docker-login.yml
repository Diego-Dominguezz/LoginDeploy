name: CI, Build & Deploy to AWS EC2

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Job de CI - Se ejecuta en push y PRs
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with Jest (Unit tests only)
        run: npm run test:unit:ci

      - name: Build Docker image (CI only)
        run: |
          docker build -t login-ejemplo:ci .

  # Job de Build & Deploy - Solo se ejecuta en push a main
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configura credenciales de AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Login a AWS ECR usando aws-actions/amazon-ecr-login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Instala dependencias y corre pruebas Jest
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with Jest (Unit tests only)
        run: npm run test:unit:ci

      # Build and push images (Docker Bake si existe, Compose si no)
      - name: Build and push Docker images (Bake or Compose)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          if [ -f docker-bake.hcl ]; then
            ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }} docker buildx bake --push
          else
            docker build -t ${{ steps.login-ecr.outputs.registry }}/login-ejemplo:latest .
            docker push ${{ steps.login-ecr.outputs.registry }}/login-ejemplo:latest
          fi

      # Despliegue remoto en EC2 vÃ­a SSH (solo pull y up, sin git pull)
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/LoginDeploy
            echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" > .env
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker compose pull
            docker compose up -d --remove-orphans
